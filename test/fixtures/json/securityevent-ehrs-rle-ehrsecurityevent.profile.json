{
  "resourceType": "Profile",
  "id": "securityevent-ehrs-rle-ehrsecurityevent",
  "text": {
    "status": "generated",
    "div": "<div>to do</div>"
  },
  "url": "http://hl7.org/fhir/Profile/securityevent-ehrs-rle-ehrsecurityevent",
  "name": "EHRS FM Record Lifecycle Event - Security Event",
  "publisher": "Health Level Seven, Inc. - EHR WG",
  "telecom": [
    {
      "system": "url",
      "value": "http://hl7.org/special/committees/ehr.html"
    }
  ],
  "description": "Defines the elements to be supported within the SecurityEvent resource in order to conform with the Electronic Health Record System Functional Model Record Lifecycle Event standard : EHRS FM Record Lifecycle Event - Security Event",
  "status": "draft",
  "date": "2014-12-04",
  "type": "SecurityEvent",
  "base": "http://hl7.org/fhir/Profile/SecurityEvent",
  "snapshot": {
    "element": [
      {
        "path": "SecurityEvent",
        "name": "EHRSecurityEvent",
        "short": "Event record kept for security purposes",
        "formal": "A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.",
        "comments": "Based on ATNA (RFC 3881).",
        "min": 1,
        "max": "1",
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "Message"
          },
          {
            "identity": "rim",
            "map": "ControlAct[moodCode=EVN]"
          },
          {
            "identity": "rim",
            "map": "ControlAct[moodCode=EVN]"
          },
          {
            "identity": "dicom",
            "map": "Message"
          }
        ]
      },
      {
        "path": "SecurityEvent.id",
        "short": "Logical id of this artefact",
        "formal": "The logical id of the resource, as used in the url for the resoure. Once assigned, this value never changes.",
        "comments": "The only time that a resource does not have an id is when it is being submitted to the server using a create operation. Bundles always have an id, though it is usually a generated UUID.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": false
      },
      {
        "path": "SecurityEvent.meta",
        "short": "Metadata about the resource",
        "formal": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content may not always be associated with version changes to the resource.",
        "min": 0,
        "max": "1",
        "isSummary": false
      },
      {
        "path": "SecurityEvent.meta.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "formal": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.meta.extension",
        "short": "Additional Content defined by implementations",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.meta.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "SecurityEvent.meta.versionId",
        "short": "Version specific identifier",
        "formal": "The version specific identifier, as it appears in the version portion of the url. This values changes when the resource is created, updated, or deleted.",
        "comments": "The server assigns this value, and ignores what the client specifies, except in the case that the server is imposing version integrity on updates/deletes.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": false
      },
      {
        "path": "SecurityEvent.meta.lastUpdated",
        "short": "When the resource version last changed",
        "formal": "When the resource last changed - e.g. when the version changed.",
        "comments": "This value is always populated except when the resource is first being created. The server / resource manager sets this value; what a client provides is irrelevant.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "instant"
          }
        ],
        "isSummary": false
      },
      {
        "path": "SecurityEvent.meta.profile",
        "short": "Profiles this resource claims to conform to",
        "formal": "A list of profiles that this resource claims to conform to. The URL is a reference to Profile.url.",
        "comments": "It is up to the server and/or other infrastruture of policy to determine whether/how these claims are verified and/or updated over tiem.",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "uri"
          }
        ],
        "isSummary": false
      },
      {
        "path": "SecurityEvent.meta.security",
        "short": "Security Labels applied to this resource",
        "formal": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
        "comments": "The security labels can be updated without changing the stated version of the resource.",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": false
      },
      {
        "path": "SecurityEvent.meta.tag",
        "short": "Tags applied",
        "formal": "Tags applied to this resource. Tags are intended to to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
        "comments": "The tags can be updated without changing the stated version of the resource.",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": false
      },
      {
        "path": "SecurityEvent.implicitRules",
        "short": "A set of rules under which this content was created",
        "formal": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content.",
        "comments": "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element as much as possible.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "uri"
          }
        ],
        "isModifier": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.language",
        "short": "Language of the resource content",
        "formal": "The base language in which the resource is written.",
        "comments": "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource\n\nNot all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": false,
        "binding": {
          "name": "Language",
          "isExtensible": false,
          "conformance": "required",
          "description": "A human language",
          "referenceUri": "http://tools.ietf.org/html/bcp47"
        }
      },
      {
        "path": "SecurityEvent.text",
        "short": "Text summary of the resource, for human interpretation",
        "formal": "A human-readable narrative that contains a summary of the resource, and may be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
        "comments": "Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative.",
        "synonym": [
          "narrative",
          "html",
          "xhtml",
          "display"
        ],
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Narrative"
          }
        ],
        "condition": [
          "1"
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "Act.text?"
          },
          {
            "identity": "rim",
            "map": "Act.text?"
          }
        ]
      },
      {
        "path": "SecurityEvent.contained",
        "short": "Contained, inline Resources",
        "formal": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
        "comments": "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again.",
        "synonym": [
          "inline resources",
          "anonymous resources",
          "contained resources"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Resource"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "SecurityEvent.extension",
        "short": "Additional Content defined by implementations",
        "formal": "May be used to represent additional information that is not part of the basic definition of the resource. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "SecurityEvent.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "formal": "May be used to represent additional information that is not part of the basic definition of the resource, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "SecurityEvent.event",
        "short": "What was done",
        "formal": "Identifies the name, action type, time, and disposition of the audited event.",
        "requirements": "The event must be identified.",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "EventIdentification"
          },
          {
            "identity": "rim",
            "map": "N/A (no nesting in v3)"
          },
          {
            "identity": "rim",
            "map": "N/A (no nesting in v3)"
          },
          {
            "identity": "dicom",
            "map": "EventIdentification"
          }
        ]
      },
      {
        "path": "SecurityEvent.event.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "formal": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.event.extension",
        "slicing": {
          "discriminator": [
            "url"
          ],
          "rules": "open"
        },
        "short": "Additional Content defined by implementations",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.event.extension",
        "name": "location",
        "short": "Additional Content defined by implementations",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.event.extension",
        "name": "reason",
        "short": "Additional Content defined by implementations",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.event.extension",
        "name": "policy",
        "short": "Additional Content defined by implementations",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.event.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "SecurityEvent.event.type",
        "short": "Type/identifier of event",
        "formal": "Identifier for a family of the event.",
        "comments": "e.g., a menu item, program, rule, policy, function code, application name or URL. It identifies the performed function.",
        "requirements": "This identifies the performed function. For \"Execute\" Event Action Code audit records, this identifies the application function performed.",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "binding": {
          "name": "SecurityEventType",
          "isExtensible": true,
          "conformance": "preferred",
          "description": "Type of event",
          "referenceReference": {
            "reference": "http://hl7.org/fhir/vs/security-event-type"
          }
        },
        "mapping": [
          {
            "identity": "dicom",
            "map": "@EventId"
          },
          {
            "identity": "rim",
            "map": ".code (type, subtype and action are pre-coordinated or sent as translations)"
          },
          {
            "identity": "rim",
            "map": ".code (type, subtype and action are pre-coordinated or sent as translations)"
          },
          {
            "identity": "dicom",
            "map": "@EventId"
          }
        ]
      },
      {
        "path": "SecurityEvent.event.subtype",
        "short": "More specific type/id for the event",
        "formal": "Identifier for the category of event.",
        "requirements": "This field enables queries of messages by implementation-defined event categories.",
        "min": 0,
        "max": "*",
        "mustSupport": true,
        "isSummary": false,
        "binding": {
          "name": "SecurityEventSubType",
          "isExtensible": true,
          "conformance": "preferred",
          "description": "Sub-type of event",
          "referenceReference": {
            "reference": "http://hl7.org/fhir/vs/security-event-sub-type"
          }
        },
        "mapping": [
          {
            "identity": "dicom",
            "map": "@EventTypeCode"
          },
          {
            "identity": "rim",
            "map": ".code (type, subtype and action are pre-coordinated or sent as translations)"
          },
          {
            "identity": "rim",
            "map": ".code (type, subtype and action are pre-coordinated or sent as translations)"
          },
          {
            "identity": "dicom",
            "map": "@EventTypeCode"
          }
        ]
      },
      {
        "path": "SecurityEvent.event.action",
        "short": "Type of action performed during the event",
        "formal": "Indicator for type of action performed during the event that generated the audit.",
        "requirements": "This broadly indicates what kind of action was done on the Participant Object.",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "binding": {
          "name": "SecurityEventAction",
          "isExtensible": false,
          "conformance": "required",
          "description": "Indicator for type of action performed during the event that generated the audit.",
          "referenceReference": {
            "reference": "http://hl7.org/fhir/vs/security-event-action"
          }
        },
        "mapping": [
          {
            "identity": "dicom",
            "map": "@EventActionCode"
          },
          {
            "identity": "rim",
            "map": ".code (type, subtype and action are pre-coordinated or sent as translations)"
          },
          {
            "identity": "rim",
            "map": ".code (type, subtype and action are pre-coordinated or sent as translations)"
          },
          {
            "identity": "dicom",
            "map": "@EventActionCode"
          }
        ]
      },
      {
        "path": "SecurityEvent.event.dateTime",
        "short": "Time when the event occurred on source",
        "formal": "The time when the event occurred on the source.",
        "comments": "In a distributed system, some sort of common time base, e.g., an NTP [RFC1305] server, is a good implementation tactic.",
        "requirements": "This ties an event to a specific date and time. Security audits typically require a consistent time base, e.g., UTC, to eliminate time-zone issues arising from geographical distribution.",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "@EventDateTime"
          },
          {
            "identity": "rim",
            "map": ".effectiveTime"
          },
          {
            "identity": "rim",
            "map": ".effectiveTime"
          },
          {
            "identity": "dicom",
            "map": "@EventDateTime"
          }
        ]
      },
      {
        "path": "SecurityEvent.event.outcome",
        "short": "Whether the event succeeded or failed",
        "formal": "Indicates whether the event succeeded or failed.",
        "comments": "In some cases a \"success\" may be partial, for example, an incomplete or interrupted transfer of a radiological study. For the purpose of establishing accountability, these distinctions are not relevant.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": false,
        "binding": {
          "name": "SecurityEventOutcome",
          "isExtensible": false,
          "conformance": "required",
          "description": "Indicates whether the event succeeded or failed",
          "referenceReference": {
            "reference": "http://hl7.org/fhir/vs/security-event-outcome"
          }
        },
        "mapping": [
          {
            "identity": "dicom",
            "map": "@EventOutcomeIndicator"
          },
          {
            "identity": "rim",
            "map": ".actionNegationInd"
          },
          {
            "identity": "rim",
            "map": ".actionNegationInd"
          },
          {
            "identity": "dicom",
            "map": "@EventOutcomeIndicator"
          }
        ]
      },
      {
        "path": "SecurityEvent.event.outcomeDesc",
        "short": "Description of the event outcome",
        "formal": "A free text description of the outcome of the event.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "@EventOutcomeDescription"
          },
          {
            "identity": "rim",
            "map": ".outboundRelationship[typeCode=OUT].target.text"
          },
          {
            "identity": "rim",
            "map": ".outboundRelationship[typeCode=OUT].target.text"
          },
          {
            "identity": "dicom",
            "map": "@EventOutcomeDescription"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant",
        "short": "A person, a hardware device or software process",
        "formal": "A person, a hardware device or software process.",
        "comments": "There may be more than one user per event, for example, in cases of actions initiated by one user for other users, or in events that involve more than one user, hardware device, or system process. However, only one user may be the initiator/requestor for the event.",
        "requirements": "The event has one or more active participants.",
        "min": 1,
        "max": "*",
        "constraint": [
          {
            "key": "3",
            "name": "Participant Identification",
            "severity": "error",
            "human": "Either a userId or a reference, but not both",
            "xpath": "exists(f:userId) != exists(f:reference)"
          }
        ],
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "ActiveParticipant"
          },
          {
            "identity": "rim",
            "map": ".participation"
          },
          {
            "identity": "rim",
            "map": ".participation"
          },
          {
            "identity": "dicom",
            "map": "ActiveParticipant"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "formal": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.extension",
        "short": "Additional Content defined by implementations",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.role",
        "short": "User roles (e.g. local RBAC codes)",
        "formal": "Specification of the role(s) the user plays when performing the event. Usually the codes used in this element are local codes defined by the role-based access control security system used in the local context.",
        "requirements": "This value ties an audited event to a user's role(s). It is an optional value that might be used to group events for analysis by user functional role categories.",
        "min": 0,
        "max": "*",
        "mustSupport": true,
        "isSummary": false,
        "binding": {
          "name": "DICOMRoleId",
          "isExtensible": true,
          "conformance": "preferred",
          "description": "Role(s) the user plays (from RBAC)",
          "referenceReference": {
            "reference": "http://hl7.org/fhir/vs/dicm-402-roleid"
          }
        },
        "mapping": [
          {
            "identity": "dicom",
            "map": "RoleIdCode"
          },
          {
            "identity": "rim",
            "map": ".typeCode and/or .functionCode"
          },
          {
            "identity": "rim",
            "map": ".typeCode and/or .functionCode"
          },
          {
            "identity": "dicom",
            "map": "RoleIdCode"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.reference",
        "short": "Direct reference to resource",
        "formal": "Direct reference to a resource that identifies the participant.",
        "requirements": "This field ties an audit event to a specific resource.",
        "min": 0,
        "max": "1",
        "condition": [
          "3"
        ],
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": ".role"
          },
          {
            "identity": "rim",
            "map": ".role"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.userId",
        "short": "Unique identifier for the user",
        "formal": "Unique identifier for the user actively participating in the event.",
        "comments": "a unique value within the Audit Source ID. For node-based authentication -- where only the system hardware or process, but not a human user, is identified -- User ID would be the node name.",
        "requirements": "This field ties an audit event to a specific user.",
        "min": 0,
        "max": "1",
        "condition": [
          "3"
        ],
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "@UserId"
          },
          {
            "identity": "rim",
            "map": ".id"
          },
          {
            "identity": "rim",
            "map": ".id"
          },
          {
            "identity": "dicom",
            "map": "@UserId"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.altId",
        "short": "Alternative User id e.g. authentication",
        "formal": "Alternative Participant Identifier. For a human, this should be a user identifier text string from authentication system. This identifier would be one known to a common authentication system (e.g., single sign-on), if available.",
        "requirements": "In some situations a human user may authenticate with one identity but, to access a specific application system, may use a synonymous identify. For example, some \"single sign on\" implementations will do this. The alternative identifier would then be the original identify  used for authentication, and the User ID is the one known to and used by the application.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "@AlternativeUserId"
          },
          {
            "identity": "rim",
            "map": ".id (distinguish id type by root)"
          },
          {
            "identity": "rim",
            "map": ".id (distinguish id type by root)"
          },
          {
            "identity": "dicom",
            "map": "@AlternativeUserId"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.name",
        "short": "Human-meaningful name for the user",
        "formal": "Human-meaningful name for the user.",
        "requirements": "The User ID and Authorization User ID may be internal or otherwise obscure values. This field assists the auditor in identifying the actual user.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "@UserName"
          },
          {
            "identity": "rim",
            "map": ".name"
          },
          {
            "identity": "rim",
            "map": ".name"
          },
          {
            "identity": "dicom",
            "map": "@UserName"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.requestor",
        "short": "Whether user is initiator",
        "formal": "Indicator that the user is or is not the requestor, or initiator, for the event being audited.",
        "comments": "There can only be one initiator. If the initiator is not clear, then do not choose any one participant as the initiator.",
        "requirements": "This value is used to distinguish between requestor-users and recipient-users. For example, one person may initiate a report-output to be sent to another user.",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "@UserIsRequestor"
          },
          {
            "identity": "rim",
            "map": "If participation.typeCode was author, then true"
          },
          {
            "identity": "rim",
            "map": "If participation.typeCode was author, then true"
          },
          {
            "identity": "dicom",
            "map": "@UserIsRequestor"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.media",
        "short": "Type of media",
        "formal": "Type of media involved. Used when the event is about exporting/importing onto media.",
        "requirements": "Usually, this is used instead of specifying a network address. This field is not used for Media Id (i.e. the serial number of a CD).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "MediaType"
          },
          {
            "identity": "rim",
            "map": ".player.description.mediaType"
          },
          {
            "identity": "rim",
            "map": ".player.description.mediaType"
          },
          {
            "identity": "dicom",
            "map": "MediaType"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.network",
        "short": "Logical network location for application activity",
        "formal": "Logical network location for application activity, if the activity has a network location.",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": ".player.description.reference"
          },
          {
            "identity": "rim",
            "map": ".player.description.reference"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.network.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "formal": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.network.extension",
        "short": "Additional Content defined by implementations",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.network.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.network.identifier",
        "short": "Identifier for the network access point of the user device",
        "formal": "An identifier for the network access point of the user device for the audit event.",
        "comments": "This could be a device id, IP address or some other identifier associated with a device.",
        "requirements": "This datum identifies the user's network access point, which may be distinct from the server that performed the action. It is an optional value that may be used to group events recorded on separate servers for analysis of a specific network access point's data access across all servers.",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "@NetworkAccessPointID"
          },
          {
            "identity": "rim",
            "map": "pre-coordinated into URL"
          },
          {
            "identity": "rim",
            "map": "pre-coordinated into URL"
          },
          {
            "identity": "dicom",
            "map": "@NetworkAccessPointID"
          }
        ]
      },
      {
        "path": "SecurityEvent.participant.network.type",
        "short": "The type of network access point",
        "formal": "An identifier for the type of network access point that originated the audit event.",
        "requirements": "This datum identifies the type of network access point identifier of the user device for the audit event. It is an optional value that may be used to group events recorded on separate servers for analysis of access according to a network access point's type.",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "binding": {
          "name": "SecurityEventParticipantNetworkType",
          "isExtensible": false,
          "conformance": "required",
          "description": "The type of network access point that originated the audit event",
          "referenceReference": {
            "reference": "http://hl7.org/fhir/vs/network-type"
          }
        },
        "mapping": [
          {
            "identity": "dicom",
            "map": "@NetworkAccessPointTypeCode"
          },
          {
            "identity": "rim",
            "map": "pre-coordinated into URL"
          },
          {
            "identity": "rim",
            "map": "pre-coordinated into URL"
          },
          {
            "identity": "dicom",
            "map": "@NetworkAccessPointTypeCode"
          }
        ]
      },
      {
        "path": "SecurityEvent.source",
        "short": "Application systems and processes",
        "formal": "Application systems and processes.",
        "comments": "Since multi-tier, distributed, or composite applications make source identification ambiguous, this collection of fields may repeat for each application or process actively involved in the event. For example, multiple value-sets can identify participating web servers, application processes, and database server threads in an n-tier distributed application. Passive event participants, e.g., low-level network transports, need not be identified.",
        "requirements": "The event is reported by one source.",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "AuditSourceIdentification"
          },
          {
            "identity": "rim",
            "map": ".participation[typeCode=INF].role[classCode=ASSIGN].player[classCode=DEV, determinerCode=INSTANCE]"
          },
          {
            "identity": "rim",
            "map": ".participation[typeCode=INF].role[classCode=ASSIGN].player[classCode=DEV, determinerCode=INSTANCE]"
          },
          {
            "identity": "dicom",
            "map": "AuditSourceIdentification"
          }
        ]
      },
      {
        "path": "SecurityEvent.source.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "formal": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.source.extension",
        "short": "Additional Content defined by implementations",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.source.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "SecurityEvent.source.site",
        "short": "Logical source location within the enterprise",
        "formal": "Logical source location within the healthcare enterprise network.",
        "comments": "a hospital or other provider location within a multi-entity provider group.",
        "requirements": "This value differentiates among the sites in a multi-site enterprise health information system.",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "@AuditEnterpriseSiteId"
          },
          {
            "identity": "rim",
            "map": ".scopedRole[classCode=LOCE].player.desc"
          },
          {
            "identity": "rim",
            "map": ".scopedRole[classCode=LOCE].player.desc"
          },
          {
            "identity": "dicom",
            "map": "@AuditEnterpriseSiteId"
          }
        ]
      },
      {
        "path": "SecurityEvent.source.identifier",
        "short": "The id of source where event originated",
        "formal": "Identifier of the source where the event originated.",
        "requirements": "This field ties the event to a specific source system. It may be used to group events for analysis according to where the event occurred.",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "@AuditSourceId"
          },
          {
            "identity": "rim",
            "map": ".id"
          },
          {
            "identity": "rim",
            "map": ".id"
          },
          {
            "identity": "dicom",
            "map": "@AuditSourceId"
          }
        ]
      },
      {
        "path": "SecurityEvent.source.type",
        "short": "The type of source where event originated",
        "formal": "Code specifying the type of source where event originated.",
        "requirements": "This field indicates which type of source is identified by the Audit Source ID. It is an optional value that may be used to group events for analysis according to the type of source where the event occurred.",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "binding": {
          "name": "SecurityEventSourceType",
          "isExtensible": true,
          "conformance": "preferred",
          "description": "Code specifying the type of source where event originated",
          "referenceReference": {
            "reference": "http://hl7.org/fhir/vs/security-source-type"
          }
        },
        "mapping": [
          {
            "identity": "dicom",
            "map": "AuditSourceTypeCode"
          },
          {
            "identity": "rim",
            "map": ".code"
          },
          {
            "identity": "rim",
            "map": ".code"
          },
          {
            "identity": "dicom",
            "map": "AuditSourceTypeCode"
          }
        ]
      },
      {
        "path": "SecurityEvent.object",
        "short": "Specific instances of data or objects that have been accessed",
        "formal": "Specific instances of data or objects that have been accessed.",
        "comments": "required unless the values for Event Identification, Active Participant Identification, and Audit Source Identification are sufficient to document the entire auditable event. Because events may have more than one participant object, this group can be a repeating set of values.",
        "requirements": "The event may have other objects involved.",
        "min": 0,
        "max": "*",
        "constraint": [
          {
            "key": "2",
            "name": "Object Identification",
            "severity": "error",
            "human": "Either an identifier or a reference, but not both",
            "xpath": "exists(f:identifier) != exists(f:reference)"
          },
          {
            "key": "1",
            "name": "Object Name",
            "severity": "error",
            "human": "Either a name or a query (or both)",
            "xpath": "not(exists(f:name)) or not(exists(f:query))"
          }
        ],
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "ParticipantObjectIdentification"
          },
          {
            "identity": "rim",
            "map": ".outboundRelationship[typeCode=SUBJ].target\n\nor\n\n.participation[typeCode=SBJ].role"
          },
          {
            "identity": "rim",
            "map": ".outboundRelationship[typeCode=SUBJ].target\n\nor\n\n.participation[typeCode=SBJ].role"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectIdentification"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "formal": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.extension",
        "short": "Additional Content defined by implementations",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.identifier",
        "short": "Specific instance of object (e.g. versioned)",
        "formal": "Identifies a specific instance of the participant object. The reference should always be version specific.",
        "comments": "Identifier details depends on object type.",
        "min": 0,
        "max": "1",
        "condition": [
          "2"
        ],
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "@ParticipantObjectID"
          },
          {
            "identity": "rim",
            "map": ".id.extension"
          },
          {
            "identity": "rim",
            "map": ".id.extension"
          },
          {
            "identity": "dicom",
            "map": "@ParticipantObjectID"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.reference",
        "short": "Specific instance of resource (e.g. versioned)",
        "formal": "Identifies a specific instance of the participant object. The reference should always be version specific.",
        "min": 0,
        "max": "1",
        "condition": [
          "2"
        ],
        "mustSupport": true,
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "@ParticipantObjectID"
          },
          {
            "identity": "rim",
            "map": "[self]"
          },
          {
            "identity": "rim",
            "map": "[self]"
          },
          {
            "identity": "dicom",
            "map": "@ParticipantObjectID"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.type",
        "short": "Object type being audited",
        "formal": "Object type being audited.",
        "comments": "This value is distinct from the user's role or any user relationship to the participant object.",
        "requirements": "To describe the object being acted upon. In addition to queries on the subject of the action in an auditable event, it is also important to be able to query on the object type for the action.",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "binding": {
          "name": "SecurityEventObjectType",
          "isExtensible": false,
          "conformance": "required",
          "description": "Code for the participant object type being audited",
          "referenceReference": {
            "reference": "http://hl7.org/fhir/vs/object-type"
          }
        },
        "mapping": [
          {
            "identity": "dicom",
            "map": "@ParticipantObjectTypeCode"
          },
          {
            "identity": "rim",
            "map": "[self::Act].code\nor\nrole.player.code"
          },
          {
            "identity": "rim",
            "map": "[self::Act].code\nor\nrole.player.code"
          },
          {
            "identity": "dicom",
            "map": "@ParticipantObjectTypeCode"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.role",
        "short": "Functional application role of Object",
        "formal": "Code representing the functional application role of Participant Object being audited.",
        "comments": "See RFC 3881 for rules concerning matches between role and type.",
        "requirements": "For some detailed audit analysis it may be necessary to indicate a more granular type of participant, based on the application role it serves.",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "binding": {
          "name": "SecurityEventObjectRole",
          "isExtensible": false,
          "conformance": "required",
          "description": "Code representing the functional application role of Participant Object being audited",
          "referenceReference": {
            "reference": "http://hl7.org/fhir/vs/object-role"
          }
        },
        "mapping": [
          {
            "identity": "dicom",
            "map": "@ParticipantObjectTypeCodeRole"
          },
          {
            "identity": "rim",
            "map": "role.code\n(not sure what this would mean for an Act)"
          },
          {
            "identity": "rim",
            "map": "role.code\n(not sure what this would mean for an Act)"
          },
          {
            "identity": "dicom",
            "map": "@ParticipantObjectTypeCodeRole"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.lifecycle",
        "short": "Life-cycle stage for the object",
        "formal": "Identifier for the data life-cycle stage for the participant object.",
        "comments": "This can be used to provide an audit trail for data, over time, as it passes through the system.",
        "requirements": "Institutional policies for privacy and security may optionally fall under different accountability rules based on data life cycle. This provides a differentiating value for those cases.",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "binding": {
          "name": "SecurityEventObjectLifecycle",
          "isExtensible": false,
          "conformance": "required",
          "description": "Identifier for the data life-cycle stage for the participant object",
          "referenceReference": {
            "reference": "http://hl7.org/fhir/vs/object-lifecycle"
          }
        },
        "mapping": [
          {
            "identity": "dicom",
            "map": "@ParticipantObjectDataLifeCycle"
          },
          {
            "identity": "rim",
            "map": "target of ObservationEvent[code=\"lifecycle\"].value"
          },
          {
            "identity": "rim",
            "map": "target of ObservationEvent[code=\"lifecycle\"].value"
          },
          {
            "identity": "dicom",
            "map": "@ParticipantObjectDataLifeCycle"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.sensitivity",
        "short": "Policy-defined sensitivity for the object",
        "formal": "Denotes policy-defined sensitivity for the Participant Object ID such as VIP, HIV status, mental health status or similar topics.",
        "comments": "Values from ATNA are institution- and implementation-defined text strings (in sensitivity.text). HL7 defines confidentiality codes for records, documents etc. that can also be used here.",
        "requirements": "This field identifies a specific instance of an object, such as a patient, to detect/track privacy and security issues.",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false,
        "binding": {
          "name": "SecurityEventObjectSensitivity",
          "isExtensible": true,
          "conformance": "example",
          "description": "The sensitivity of an object in a security event resource. May also encompass confidentiality and rudimentary access control",
          "referenceReference": {
            "reference": "http://hl7.org/fhir/vs/security-event-sensitivity"
          }
        },
        "mapping": [
          {
            "identity": "dicom",
            "map": "@ParticipantObjectSensitivity"
          },
          {
            "identity": "rim",
            "map": ".confidentialityCode"
          },
          {
            "identity": "rim",
            "map": ".confidentialityCode"
          },
          {
            "identity": "dicom",
            "map": "@ParticipantObjectSensitivity"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.name",
        "short": "Instance-specific descriptor for Object",
        "formal": "An instance-specific descriptor of the Participant Object ID audited, such as a person's name.",
        "comments": "This field may be used in a query/report to identify audit events for a specific person, e.g., where multiple synonymous Participant Object IDs (patient number, medical record number, encounter number, etc.) have been used.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "1"
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "ParticipantObjectName"
          },
          {
            "identity": "rim",
            "map": ".title"
          },
          {
            "identity": "rim",
            "map": ".title"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectName"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.description",
        "short": "Descriptive text",
        "formal": "Text that describes the object in more detail.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "ParticipantObjectDescription"
          },
          {
            "identity": "rim",
            "map": ".text"
          },
          {
            "identity": "rim",
            "map": ".text"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDescription"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.query",
        "short": "Actual query for object",
        "formal": "The actual query for a query-type participant object.",
        "requirements": "For query events it may be necessary to capture the actual query input to the query process in order to identify the specific event. Because of differences among query implementations and data encoding for them, this is a base 64 encoded data blob. It may be subsequently decoded or interpreted by downstream audit analysis processing.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "condition": [
          "1"
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "ParticipantObjectQuery"
          },
          {
            "identity": "rim",
            "map": "No mapping"
          },
          {
            "identity": "rim",
            "map": "No mapping"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectQuery"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.detail",
        "short": "Additional Information about the Object",
        "formal": "Additional Information about the Object.",
        "min": 0,
        "max": "*",
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail"
          },
          {
            "identity": "rim",
            "map": ".inboundRelationship[typeCode=SUBJ].target[classCode=OBS, moodCode=EVN]"
          },
          {
            "identity": "rim",
            "map": ".inboundRelationship[typeCode=SUBJ].target[classCode=OBS, moodCode=EVN]"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.detail.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "formal": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.detail.extension",
        "short": "Additional Content defined by implementations",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          },
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.detail.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "formal": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "synonym": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.detail.type",
        "short": "Name of the property",
        "formal": "Name of the property.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "@type"
          },
          {
            "identity": "rim",
            "map": ".code"
          },
          {
            "identity": "rim",
            "map": ".code"
          },
          {
            "identity": "dicom",
            "map": "@type"
          }
        ]
      },
      {
        "path": "SecurityEvent.object.detail.value",
        "short": "Property value",
        "formal": "Property value.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "isSummary": false,
        "mapping": [
          {
            "identity": "dicom",
            "map": "@value"
          },
          {
            "identity": "rim",
            "map": ".value"
          },
          {
            "identity": "rim",
            "map": ".value"
          },
          {
            "identity": "dicom",
            "map": "@value"
          }
        ]
      }
    ]
  },
  "differential": {
    "element": [
      {
        "path": "SecurityEvent",
        "name": "EHRSecurityEvent",
        "min": 1,
        "max": "1",
        "isSummary": false
      },
      {
        "path": "SecurityEvent.event",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.event.extension",
        "slicing": {
          "discriminator": [
            "url"
          ],
          "rules": "open"
        }
      },
      {
        "path": "SecurityEvent.event.extension",
        "name": "location",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": "http://hl7.org/fhir/ExtensionDefinition/securityevent-ehrs-rle-location"
          }
        ],
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.event.extension",
        "name": "reason",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": "http://hl7.org/fhir/ExtensionDefinition/securityevent-ehrs-rle-reason"
          }
        ],
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.event.extension",
        "name": "policy",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": "http://hl7.org/fhir/ExtensionDefinition/securityevent-ehrs-rle-policy"
          }
        ],
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.event.type",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.event.subtype",
        "min": 0,
        "max": "*",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.event.action",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.event.dateTime",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.participant",
        "min": 1,
        "max": "*",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.participant.role",
        "min": 0,
        "max": "*",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.participant.reference",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.participant.userId",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.participant.requestor",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.participant.network",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.participant.network.identifier",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.participant.network.type",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.source",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.source.site",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.source.identifier",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.source.type",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.object",
        "min": 0,
        "max": "*",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.object.identifier",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.object.reference",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.object.type",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.object.role",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.object.lifecycle",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      },
      {
        "path": "SecurityEvent.object.sensitivity",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "isSummary": false
      }
    ]
  }
}